引言
本章开始讨论UNIX系统，先说明可用的文件IO韩式——打开文件、读文件、写文件等。UNIX系统中的大多数文件IO只需要到5个函数：open、read、write,lseek和close.然后说明不同缓冲长度对read和write函数的影响
本章描述的函数经常被称为不带缓冲的IO。术语不带缓冲指的是每个read和write都dialyzing内核中的一个系统调用。
文件描述符
对于内核而言，所有打开的文件都通过文件描述符引用。文件描述符是一个非负整数。当打开一个现有文件或创建一个新文件时，内核像进程返回一个文件描述符。
按照惯例，UNIX系统shell把文件描述符0与进程的标准输入关联，文件描述符1与标准输出关联。
3.3函数open和openat
调用open或openat函数可以打开或创建一个文件
#include  <fcntl.h>
int open(const char *path,int oflag,../*mode_t mode*/);
int openat(int fd,const *path,in oflag,.../*mode_t mode*/);
我们将最后一个参数写为...，IOS C用这种方法标明余下的参数量及其类型是可变的。对于open函数而言，仅当创建新文件时才是用最后这个参数（稍后将对此进行说明）。在函数原型中将此参数放置在注释中
path参数是要打开或创建文件的名字，flag参数可用来说明此函数的多个选项。用下列一个或多个常量进行“或”运算构成oflag参数
O_RDONLY
O_WRONLY
O_RDWR
O_EXEC
O_SEARCH

