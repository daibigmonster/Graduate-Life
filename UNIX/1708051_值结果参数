值-结果参数
我们提到过，当往一个套接字函数传递一个套接字地址结构时，该结构总是以引用形式来传递，也就是说传递的是指向该结构的指针，该结构的长度zowie一个参数，不过其传递方式取决于该结构的传递方向：是从进程到内核，还是从内核到进程
1从进程到内核传递套机诶子地址结构的函数由3个：bind、connect和sendto。这些函数的一个参数使之想某个套接字地址结构的指针，另一个参数是该结构的整数大小
struct sockaddr_in serv;
connect(sockfd,(SA*) &serv,sizeof(serv));
既然指针和指针所指的内容的大小都穿第给了内核，于是内核直到到底序从进程复制多少数据进来。
从内核传递到进程套接字地址结构的函数有4个：accept、revcfrom、getsockname和getpeername.这4个函数的其中两个蚕食是从某个套接字地址结构的指针和指向表示该结构大小的整数变量的指针。
struct sockaddr_un cli;
socklen_t len;
len=sizeof(cli);
getpeername(inixfd,(SA *)&cli,&len)
把套接字地址结构大小这个参数从一个整数改为指向某个整数变量的指针，其原因在于：当函数被调用是，结构的大小是一个值(value)，它告诉内核结构的大小，这样内核在写该结构时不至于越界dang函数返回是，结构的大小又是一个结构(result)，它告诉进程内核在该结构中究竟存储了多少信息。这种类型的参数被称为值-结果(value-result)参数
