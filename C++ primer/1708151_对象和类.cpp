/*采用OOP方法时，首先从用户的角度考虑对象——描述对象所需的数据以及描述用户与数据交互所需的操作。完成对接扣的描述后，需要确定如何实现接口和数据存储。最后，使用新的设计方案创建处程序。
抽象和类
在C++中，用户定义类型hide是实现抽象接口的类设计。
C++中的类
类是一种将抽象转换为用户定义类型的C++工具，它将数据表示和操纵数据的方法组合成一个整洁的包
一般来说类规范由两个部分组成
类声明：以数据成员的方式描述数据部分，以成员函数（被称为方法）的方式描述公有接口
类方法的应以：描述如何实现成员函数
不要使用#include来包含源代码文件，这样做将导致多重声明
对于类，我们说公共接口。在这里，公共(public)是使用类的的程序，交互由类对象组成，而接口由编写类的人提供的方法组成。接口让程序源能够编写与类对象交互的代码，从而让程序能够使用类对象。例如，要计算string对象中包含多少个字符，您无序打开对象，而只需使用string类提供的size()方法。类设计进制公共用户直接访问类，但公共可以使用方法size().方法size()是用户和string类对象之间的公共接口的组成部分。通常，方法getling()是istream类的公共接口的组成部分，使用cin的程序不是直接与cin对象内部交互来读取一行输入，而是使用getling().
要使用某个类，必须了解其公共接口;要编写类，必须创建其公共接口
为开发一个类并编写一个使用它的程序，需要完成多个步骤。这里将开发过程分成多个阶段，而不是一次完成。通常，C++程序员将接口（类定义）放在头文件中，并将实现（类方法的代码）放在源代码中*/


