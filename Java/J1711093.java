/*
 *  包装类
 *  在Java的设计中提倡一种思想，即一切皆对象，那么这样就出现了
 *  一个矛盾，从数据类型的划分中可以知道Java中的数据类型分为基本
 *  数据类型和引用数据类型，但是基本数据类型怎么能够被称为
 *  对象呢？此时，就需要将基本数据类型进行包装，将8种基本类型变为
 *  一个类的形式，那么这也就是包装类的作用
 *  
 *  在了解包装类的概念后，下面介绍包装类的装箱与拆箱的概念，其实
 *  这两个概念本身并不难理解，将一个基本数据类型变为包装类变为基本
 *  数据额类型的过程称为拆箱操作
 */
public class J1711093{
	public static void main(String args) {
		int x = 30;
		Integer i = new Integer(x);//装箱：将基本数据类型变为包装类
		int temp  = i.intValue();//拆箱：将一个包装类变为基本数据类型
	}
}
/* 
 * 包装类应用
 * 前面已经为读者详细地介绍了包装类的基本概念，那么包装类在实际
 * 中用的最多的还是字符串变为基本数据类型的操作，例如，讲一个全
 * 由数据组成的字符串变为一个int或float类型的数据。在Integer
 * 和Float类中分别提供了两种方法：
 */